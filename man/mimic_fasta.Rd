% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mimic_fasta.R
\name{mimic_fasta}
\alias{mimic_fasta}
\title{Generate Mimic Peptides from a FASTA File}
\usage{
mimic_fasta(
  input_fasta_path,
  output_fasta_path,
  min_len = 0,
  num_shuffles = 1,
  replace_i = FALSE,
  seed = 0,
  protein_name_prefix = "mimic|Random",
  shared_peptide_ratio = 0,
  prepend_original = FALSE,
  infer_aa_frequency = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{input_fasta_path}{Path to the input FASTA file.}

\item{output_fasta_path}{Path for the output FASTA file.}

\item{min_len}{Unsigned integer, minimum length of peptides to consider.
Corresponds to the C++ '-l' option.}

\item{num_shuffles}{Unsigned integer, number of shuffles per original peptide.
Corresponds to the C++ '-m' (multFactor) option.}

\item{replace_i}{Logical, whether to replace Isoleucine (I) with Leucine (L).
Corresponds to the C++ '-I' option.}

\item{seed}{Unsigned integer, seed for the random number generator. 0 may indicate
using a random seed. Corresponds to the C++ '-s' option.}

\item{protein_name_prefix}{String, prefix for protein names in the output FASTA.
Corresponds to the C++ '-p' option.}

\item{shared_peptide_ratio}{Double, ratio of shared peptides.
Corresponds to the C++ '-q' option.}

\item{prepend_original}{Logical, whether to prepend the original peptide sequence
in the output. Corresponds to the C++ '-P' option.}

\item{infer_aa_frequency}{Logical, whether to infer amino acid frequencies from
the input file. Corresponds to the C++ '-A' option.}

\item{verbose}{Logical, enable verbose output during C++ execution.
Corresponds to the C++ '-v' option.}
}
\value{
Logical \code{TRUE} if successful and output file is created, \code{FALSE} otherwise.
}
\description{
This function takes an input FASTA file and generates a new FASTA file
containing mimic (e.g., shuffled) peptides based on the original sequences.
It serves as an R interface to the underlying C++ 'mimic' logic.
}
\examples{
\dontrun{
  # Create a dummy FASTA file
  dummy_fasta_content <- c(">seq1", "ACGT", ">seq2", "TGCA")
  dummy_input_path <- tempfile(fileext = ".fasta")
  dummy_output_path <- tempfile(fileext = ".fasta")
  writeLines(dummy_fasta_content, dummy_input_path)

  success <- mimic_fasta(
    input_fasta_path = dummy_input_path,
    output_fasta_path = dummy_output_path,
    num_shuffles = 2
  )

  if (success && file.exists(dummy_output_path)) {
    print(paste("Output successfully generated at:", dummy_output_path))
  } else {
    print("Mimic peptide generation failed or output file not found.")
  }

  if (file.exists(dummy_input_path)) file.remove(dummy_input_path)
  if (file.exists(dummy_output_path)) file.remove(dummy_output_path)
}
}
